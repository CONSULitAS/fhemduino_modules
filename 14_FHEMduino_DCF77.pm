##############################################
# $Id: 14_FHEMduino_DCF77.pm 3818 2014-06-13 $
package main;

use strict;
use warnings;

#####################################
sub
FHEMduino_DCF77_Initialize($)
{
  my ($hash) = @_;

  # output format is "D163100-16062014"
  #                   DHHMMSS-TTMMJJJJ
  #                   0123456789ABCDEF
                         
  $hash->{Match}     = "^D...............";
  $hash->{DefFn}     = "FHEMduino_DCF77_Define";
  $hash->{UndefFn}   = "FHEMduino_DCF77_Undef";
  $hash->{AttrFn}    = "FHEMduino_DCF77_Attr";
  $hash->{ParseFn}   = "FHEMduino_DCF77_Parse";
  $hash->{AttrList}  = "IODev do_not_notify:0,1 showtime:0,1 ignore:0,1 ".$readingFnAttributes;
}


#####################################
sub
FHEMduino_DCF77_Define($$)
{
  my ($hash, $def) = @_;
  my @a = split("[ \t][ \t]*", $def);

  return "wrong syntax: define <name> FHEMduino_DCF77 DCF77".int(@a)
		if(int(@a) < 2 || int(@a) > 3);

  $hash->{CODE}    = $a[2];
  $modules{FHEMduino_DCF77}{defptr}{$a[2]} = $hash;
  $hash->{STATE} = "Defined";

  AssignIoPort($hash);
  return undef;
}

#####################################
sub
FHEMduino_DCF77_Undef($$)
{
  my ($hash, $name) = @_;
  delete($modules{FHEMduino_DCF77}{defptr}{$hash->{CODE}}) if($hash && $hash->{CODE});
  return undef;
}

#####################################
sub
FHEMduino_DCF77_Parse($$)
{
  my ($hash,$msg) = @_;
  my @a = split("", $msg);

  # output format is "D163100-16062014"
  #                   DHHMMSS-TTMMJJJJ
  #                   0123456789ABCDEF

  my $deviceCode = "DCF77";
  
  my $def = $modules{FHEMduino_DCF77}{defptr}{$hash->{NAME} . "." . $deviceCode};
  $def = $modules{FHEMduino_DCF77}{defptr}{$deviceCode} if(!$def);
  if(!$def) {
    Log3 $hash, 1, "FHEMduino_DCF77 UNDEFINED sensor detected, code $deviceCode";
    return "UNDEFINED FHEMduino_DCF77 FHEMduino_DCF77 $deviceCode";
  }
  
  $hash = $def;
  my $name = $hash->{NAME};
  return "" if(IsIgnored($name));
  
  Log3 $name, 4, "FHEMduino_DCF77 $name ($msg)";  
  
  my ($hour, $min, $sec);
  my ($day, $mon, $year);

  $hour = $a[1].$a[2];
  $min  = $a[3].$a[4];
  $sec  = $a[5].$a[6];
  
  $day  = $a[8].$a[9];
  $mon  = $a[10].$a[11];
  $year = $a[12].$a[13].$a[14].$a[15];
  
  my $time = $hour.":".$min.":".$sec;
  my $date = $day.".".$mon.".".$year;
  my $val  = $time." ".$date;
  
  $hash->{lastReceive} = time();
  $hash->{lastValues}{Time} = $time;
  $hash->{lastValues}{Date} = $date;

  Log3 $name, 4, "FHEMduino_DCF77 $name: $time: $date";

  readingsBeginUpdate($hash);
  readingsBulkUpdate($hash, "state", $val);
  readingsBulkUpdate($hash, "time", $time);
  readingsBulkUpdate($hash, "date", $date);
  readingsEndUpdate($hash, 1); # Notify is done by Dispatch

  return $name;
}

sub
FHEMduino_DCF77_Attr(@)
{
  my @a = @_;

  # Make possible to use the same code for different logical devices when they
  # are received through different physical devices.
  return if($a[0] ne "set" || $a[2] ne "IODev");
  my $hash = $defs{$a[1]};
  my $iohash = $defs{$a[3]};
  my $cde = $hash->{CODE};
  delete($modules{FHEMduino_DCF77}{defptr}{$cde});
  $modules{FHEMduino_DCF77}{defptr}{$iohash->{NAME} . "." . $cde} = $hash;
  return undef;
}

1;

=pod
=begin html

<a name="FHEMduino_DCF77"></a>
<h3>FHEMduino_DCF77</h3>
<ul>
  The FHEMduino_DCF77 module interprets LogiLink DCF77 type of messages received by the FHEMduino.
  <br><br>

  <a name="FHEMduino_DCF77define"></a>
  <b>Define</b>
  <ul>
    <code>define &lt;name&gt; FHEMduino_DCF77 &lt;code&gt; [minsecs] [equalmsg]</code> <br>

    <br>
    &lt;code&gt; is the housecode of the autogenerated address of the DCF77 device and 
	is build by the channelnumber (1 to 3) and an autogenerated address build when including
	the battery (adress will change every time changing the battery).<br>
    minsecs are the minimum seconds between two log entries or notifications
    from this device. <br>E.g. if set to 300, logs of the same type will occure
    with a minimum rate of one per 5 minutes even if the device sends a message
    every minute. (Reduces the log file size and reduces the time to display
    the plots)<br>
	equalmsg set to 1 generates, if even if minsecs is set, a log entrie or notification
	when the msg content has changed.
  </ul>
  <br>

  <a name="FHEMduino_DCF77set"></a>
  <b>Set</b> <ul>N/A</ul><br>

  <a name="FHEMduino_DCF77get"></a>
  <b>Get</b> <ul>N/A</ul><br>

  <a name="FHEMduino_DCF77attr"></a>
  <b>Attributes</b>
  <ul>
    <li><a href="#IODev">IODev (!)</a></li>
    <li><a href="#do_not_notify">do_not_notify</a></li>
    <li><a href="#eventMap">eventMap</a></li>
    <li><a href="#ignore">ignore</a></li>
    <li><a href="#model">model</a> (LogiLink DCF77)</li>
    <li><a href="#showtime">showtime</a></li>
    <li><a href="#readingFnAttributes">readingFnAttributes</a></li>
  </ul>
  <br>
</ul>

=end html

=begin html_DE

<a name="FHEMduino_DCF77"></a>
<h3>FHEMduino_DCF77</h3>
<ul>
  Das FHEMduino_DCF77 module dekodiert vom FHEMduino empfangene Nachrichten des LogiLink DCF77.
  <br><br>

  <a name="FHEMduino_DCF77define"></a>
  <b>Define</b>
  <ul>
    <code>define &lt;name&gt; FHEMduino_DCF77 &lt;code&gt; [minsecs] [equalmsg]</code> <br>

    <br>
    &lt;code&gt; ist der automatisch angelegte Hauscode des DCF77 und besteht aus der
	Kanalnummer (1..3) und einer Zufallsadresse, die durch das Gerät beim einlegen der
	Batterie generiert wird (Die Adresse ändert sich bei jedem Batteriewechsel).<br>
    minsecs definert die Sekunden die mindesten vergangen sein müssen bis ein neuer
	Logeintrag oder eine neue Nachricht generiert werden.
    <br>
	Z.B. wenn 300, werden Einträge nur alle 5 Minuten erzeugt, auch wenn das Device
    alle paar Sekunden eine Nachricht generiert. (Reduziert die Log-Dateigröße und die Zeit
	die zur Anzeige von Plots benötigt wird.)<br>
	equalmsg gesetzt auf 1 legt fest, dass Einträge auch dann erzeugt werden wenn die durch
	minsecs vorgegebene Zeit noch nicht verstrichen ist, sich aber der Nachrichteninhalt geändert
	hat.
  </ul>
  <br>

  <a name="FHEMduino_DCF77set"></a>
  <b>Set</b> <ul>N/A</ul><br>

  <a name="FHEMduino_DCF77get"></a>
  <b>Get</b> <ul>N/A</ul><br>

  <a name="FHEMduino_DCF77attr"></a>
  <b>Attributes</b>
  <ul>
    <li><a href="#IODev">IODev (!)</a></li>
    <li><a href="#do_not_notify">do_not_notify</a></li>
    <li><a href="#eventMap">eventMap</a></li>
    <li><a href="#ignore">ignore</a></li>
    <li><a href="#model">model</a> (LogiLink DCF77)</li>
    <li><a href="#showtime">showtime</a></li>
    <li><a href="#readingFnAttributes">readingFnAttributes</a></li>
  </ul>
  <br>
</ul>

=end html_DE
=cut
